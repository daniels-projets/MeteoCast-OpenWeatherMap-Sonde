//        Esp01 Recepteur ExtTempSonde Receveur
//        V01-M00 


#include <ESP8266WiFi.h>
#include <espnow.h>
  typedef struct struct_message {
   String dataIdModule;
    float dataTemp;
    float dataHumid;
      int dataPression;
          } struct_message;
            struct_message myIncomingData;

   String idModule;
    float Temperature, Humidite;
      int Pression;

#include <SoftwareSerial.h>
          SoftwareSerial softSerial(3, 1);// RX, TX


void OnDataRecv (uint8_t * mac, uint8_t *incomingData, uint8_t len) {

     memcpy(&myIncomingData, incomingData, sizeof(myIncomingData));
     Serial.print("Bytes received: ");
     Serial.println(len);
     idModule = myIncomingData.dataIdModule;
     Serial.println(idModule);
     Temperature = myIncomingData.dataTemp;
     Serial.println(Temperature);
     Humidite = myIncomingData.dataHumid;
     Serial.println(Humidite);
     Pression = myIncomingData.dataPression;
     Serial.println(Pression); Serial.println();

     softSerial.write((byte *)&myIncomingData, sizeof myIncomingData);

}


void setup() {
  
     Serial.begin(115200);
     Serial.println(); Serial.println();
     Serial.println("Initialisation Esp01 > ESP-NOW"); delay(1000);
     Serial.println();

     softSerial.begin(9600);
     
     WiFi.mode(WIFI_STA);
     WiFi.disconnect();

     if (esp_now_init() != 0) {
        Serial.println("Error initializing ESP-NOW");
        return;
        } else {
        Serial.println("ESP-NOW OK");  
        }
     Serial.println();
     esp_now_set_self_role(ESP_NOW_ROLE_SLAVE);
     esp_now_register_recv_cb(OnDataRecv);
  
}


void loop() {

}
